version: "3.1"

volumes:
  sqldb:

    null
services:

  app_container:
    depends_on:
      - mysql_container
    build: .
    restart: unless-stopped
    env_file: ./.env
    ports:
      - ${NODE_LOCAL_PORT}:${NODE_DOCKER_PORT}
    environment:
      DB_HOST: mysql_container
      DB_USER: ${DB_USER}
      DB_SECRET: ${DB_SECRET}
      MYSQLDB_DATABASE: ${MYSQLDB_DATABASE}
      NODE_DOCKER_PORT: ${NODE_DOCKER_PORT}
      MYSQLDB_LOCAL_PORT: ${MYSQLDB_DOCKER_PORT}
      JWT_SECRET: ${JWT_SECRET}
      PASSPHRASE_DURATION_SECONDS: ${PASSPHRASE_DURATION_SECONDS}

    volumes:
      - .:/usr/src/app
      - /usr/src/app/node_modules

  mysql_container:
    image: mysql:8.0
    restart: unless-stopped
    env_file: ./.env
    ports:
      - ${MYSQLDB_LOCAL_PORT}:${MYSQLDB_DOCKER_PORT}
    environment:
      # here you set the root user's password for the new database
      MYSQL_ROOT_PASSWORD: ${MYSQLDB_ROOT_PASSWORD}
      MYSQLDB_DATABASE: ${MYSQLDB_DATABASE}
      MYSQL_TCP_PORT: ${MYSQLDB_DOCKER_PORT}
    volumes:
      - sqldb:/var/lib/mysql
      # this mounts the repo's ./sql directory to the container's init directory
      # search for docker-entrypoint-initdb in the docs: https://hub.docker.com/_/mysql
      - ./sql/:/docker-entrypoint-initdb.d/